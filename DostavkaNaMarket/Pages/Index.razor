@page "/"
@using DostavkaNaMarket.Data


<PageTitle>Добавить поставку</PageTitle>

<body>
    
<div class="container">
  <main>

    <div class="row g-5">
      
      <div class="col-md-7 col-lg-8">
        <h4 class="mb-3">Данные поставки</h4>
        <form class="needs-validation" novalidate="">
          <div class="row g-3">
            <div class="col-3">
              <label for="city" class="form-label">Город</label>
              <select class="form-select" id="city" required="">
                <option>Владимир</option>
                <option>Иваново</option>
                <option>Муром</option>
                <option>Ковров</option>
              </select>
              <div class="invalid-feedback">
                Please select a valid country.
              </div>
            </div>

            @{
                DateTime date = DateTime.Now;
                DateTime dateWednesday = new DateTime();
                DateTime dateMonday = new DateTime();
                if((date.ToString("dddd")) == "понедельник")
                {
                    dateWednesday = date.AddDays(2);
                    dateMonday = date;
                }
                else if((date.ToString("dddd")) == "вторник")
                {
                    dateWednesday = date.AddDays(1);
                    dateMonday = date.AddDays(6);
                }
                else if((date.ToString("dddd")) == "среда")
                {
                    dateWednesday = date;
                    dateMonday = date.AddDays(5);
                }
                else if((date.ToString("dddd")) == "четверг")
                {
                    dateWednesday = date.AddDays(6);
                    dateMonday = date.AddDays(4);
                }
                else if((date.ToString("dddd")) == "пятница")
                {
                    dateWednesday = date.AddDays(5);
                    dateMonday = date.AddDays(3);
                }
                else if((date.ToString("dddd")) == "суббота")
                {
                    dateWednesday = date.AddDays(4);
                    dateMonday = date.AddDays(2);
                }
                else if((date.ToString("dddd")) == "воскресенье")
                {
                    dateWednesday = date.AddDays(3);
                    dateMonday = date.AddDays(1);
                }
            }

           

            <div class="col-12">
                <label for="warehouse" class="form-label">Отправить в</label>
                <div class="col-12">
                    <div class="boxed-check-group boxed-check-outline-primary">
                        <label class="boxed-check boxed-check-inline">
                            <input class="boxed-check-input" type="radio" name="radio-overview" Value="@dateMonday.ToString("dddd dd MMMM yyyy")"
            @onchange="OnSelect">
                            <div class="boxed-check-label">Коледино, @dateMonday.ToString("dddd dd MMMM yyyy")</div>
                        </label>
                        <label class="boxed-check boxed-check-inline">
                            <input class="boxed-check-input" type="radio" name="radio-overview" Value="@dateWednesday.ToString("dddd dd MMMM yyyy")"
            @onchange="OnSelect">
                            <div class="boxed-check-label">Электросталь, @dateWednesday.ToString("dddd dd MMMM yyyy")</div>
                        </label>
                    </div>
                </div>
            </div>
           <p> test: @value</p>



            <div class="col-12">
              <label for="name" class="form-label">ФИО</label>
              <input type="text" class="form-control" id="name" placeholder="Иванов Иван Иванович" value="" required="">
              <div class="invalid-feedback">
                Valid first name is required.
              </div>
            </div>

            <div class="col-6">
              <label for="phoneNumber" class="form-label">Номер телефона</label>
              <div class="input-group has-validation">
                <span class="input-group-text">+7</span>
                <input type="tel" class="form-control" id="phoneNumber" placeholder="9011418686" required="">
              <div class="invalid-feedback">
                  Your username is required.
                </div>
              </div>
            </div>

            <div class="col-md-6">
              <label for="email" class="form-label">Адрес электронной почты <span class="text-muted">(По желанию)</span></label>
              <input type="email" class="form-control" id="email" placeholder="Ivanov@yandex.ru">
              <div class="invalid-feedback">
                Please enter a valid email address for shipping updates.
              </div>
            </div>




             <div class="col-12">
                <div class="col-12">
                    <div class="boxed-check-group boxed-check-outline-primary">
                        <label class="boxed-check boxed-check-inline">
                            <input class="boxed-check-input" type="radio" name="radio-overview" Value="Sam" @onchange="OnSelected" checked>
                            <div class="boxed-check-label">Привезу самостоятельно</div>
                        </label>
                        <label class="boxed-check boxed-check-inline">
                            <input class="boxed-check-input" type="radio" name="radio-overview" Value="Vivoz" @onchange="OnSelected">
                            <div class="boxed-check-label">Мне нужен вывоз</div>
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-12" id="wizard" style="display:none;" @attributes="InputAttributes">
              <label for="Address" class="form-label">Адрес</label>
              <input type="text" class="form-control" id="Address" placeholder="Город, улица, дом, подъезд" required="">
              <div class="invalid-feedback">
                Please enter your shipping address.
              </div>
            </div>


            <div class="col-12">
                <div class="col-6">
                <label for="Delivery" class="form-label">Введите ШК коробок по очереди</label>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1">WB</span>
                    <input type="number" class="form-control" name="barcode" placeholder="8027 4257" aria-label="" aria-describedby="button-addon2"
                            @bind-value="barcode" @bind-value:event="oninput" @onkeydown="@Enter">
                    <button class="btn btn-outline-primary" type="button" id="button-addon2" @onclick="AddToList">Добавить</button>
                </div>
                </div>
            </div>

            @foreach(string bar in AllNumbersBarcode)
            {
                <div class="col-6">
                    <div class="input-group mb-3">
                        <span class="input-group-text col-9" id="basic-addon1">@bar</span>
                        <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveBarcode(bar)">Удалить</button>
                    </div>
                </div>
            }


          <hr class="my-4">

          <h4 class="mb-3">Оплата</h4>

          <div class="my-3">
            <div class="form-check">
              <input id="credit" name="paymentMethod" type="radio" class="form-check-input" checked="" required="">
              <label class="form-check-label" for="credit">Наличные</label>
            </div>
            <div class="form-check">
              <input id="debit" name="paymentMethod" type="radio" class="form-check-input" required="">
              <label class="form-check-label" for="debit">Карта (+2%)</label>
            </div>
            <div class="form-check"></div>
          </div>

          
            <div class="col-12">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" Value="ok" id="invalidCheck" Checked="@isChecked" 
                  @onchange="SubmitChanged" required>
                  <label class="form-check-label" for="invalidCheck">
                    Примите условия и соглашения
                  </label>
                  <div class="invalid-feedback">
                    Вы должны принять перед отправкой.
                  </div>
                </div>
            </div>

          <hr class="my-4">
          </div>
          <button class="w-100 btn btn-secondary btn-lg" type="button" @attributes="InputAttributesSubmit">Создать заявку</button>
        </form>
      </div>
    </div>
  </main>

  <footer class="my-5 pt-5 text-muted text-center text-small">
    <p class="mb-1">© 2021–2022 Доставка на маркет</p>
  </footer>
</div>

</body>

@code{
    // Дата отправки
    private string value = "Дата не выбрана";

    // Нужен ли вывоз или привезет сам
    private string values = "Sam";
    public Dictionary<string, object> InputAttributes { get; set; }

    // Количество коробок в поставке
    private int item {get; set;}

    private List<string> AllNumbersBarcode = new List<string>();
    private string barcode { get; set; } = "";

    private bool isChecked;
    public Dictionary<string, object> InputAttributesSubmit { get; set; }

    public void OnSelect(Microsoft.AspNetCore.Components.ChangeEventArgs args) => value = (string)args.Value;

    public void OnSelected(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        values = (string)args.Value;
        if (values == "Sam")
        {
            InputAttributes = new Dictionary<string, object>()
            {
                { "style", "display:none;" }
            };
        }
        else if(values == "Vivoz")
        {
            InputAttributes = new Dictionary<string, object>()
            {
                { "style", "display:inline;" }
            };
        }
    }

    public void AddToList()
    {
        AllNumbersBarcode.Add(barcode);
        barcode = "";
    }

    public void RemoveBarcode(string bar)
    {
        AllNumbersBarcode.Remove(bar);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            AddToList();
        }
    }

    public void SubmitChanged(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        isChecked = (bool)args.Value;
        if (isChecked)
        {
            InputAttributesSubmit = new Dictionary<string, object>()
            {
                { "class", "w-100 btn btn-success btn-lg" },
                { "type", "submit" }
            };
        }
        else if(isChecked == false)
        {
            InputAttributesSubmit = new Dictionary<string, object>()
            {
                { "class", "w-100 btn btn-secondary btn-lg" },
                { "type", "button" }
            };
        }
    }

    //public void OnSubmit(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    //{
    //    okSubmit = (string)args.Value;
    //    if(okSubmit == "ok")
    //    {
    //        InputAttributes = new Dictionary<string, object>()
    //        {
    //            { "type", "submit" }
    //        };
    //    }

    //}
}