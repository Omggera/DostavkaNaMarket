@page "/"
@using DostavkaNaMarket.Data
@using DostavkaNaMarket.Models


<PageTitle>Добавить поставку</PageTitle>

<body>
<EditForm Model="user" OnValidSubmit="Create">
<DataAnnotationsValidator/>    
<div class="container">
  <main>
    <div class="row g-5">
      <div class="col-md-7 col-lg-8">
        <h4 class="mb-3">Данные поставки</h4>
        <form class="needs-validation" novalidate="">
          <div class="row g-3">
            <div class="col-3">
              <label for="city" class="form-label">Город</label>
              <InputSelect class="form-select" @bind-Value="user.CitySell">
                <option value="@User.City.Владимир">Владимир</option>
                <option value="@User.City.Иваново">Иваново</option>
                <option value="@User.City.Муром">Муром</option>
                <option value="@User.City.Ковров">Ковров</option>
              </InputSelect>
              <div class="invalid-feedback">
                Please select a valid country.
              </div>
            </div>
            <p> test: @user.CitySell</p>

            @{
                user.DateDelivery();
            }
            <div class="col-12">
                <label for="warehouse" class="form-label">Отправить в</label>
                <div class="col-12">
                    <InputRadioGroup Name="radio-overview-1" @bind-Value="user.DateSell">
                    <div class="boxed-check-group boxed-check-outline-primary">
                        <label class="boxed-check boxed-check-inline">
                            <InputRadio class="boxed-check-input" type="radio" name="radio-overview-1" Value="@User.Date.Понедельник"/>
                            <div class="boxed-check-label">Коледино, @user.dateMonday.ToString("dddd dd MMMM yyyy")</div>
                        </label>
                        <label class="boxed-check boxed-check-inline">
                            <InputRadio class="boxed-check-input" type="radio" name="radio-overview-1" Value="@User.Date.Среда"/>
                            <div class="boxed-check-label">Электросталь, @user.dateWednesday.ToString("dddd dd MMMM yyyy")</div>
                        </label>
                    </div>
                    </InputRadioGroup>
                    <ValidationMessage For="(() => user.DateSell)" />
                </div>
            </div>
           <p> test: @user.DateSell</p>

            <div class="col-12">
              <label for="name" class="form-label">ФИО</label>
              <InputText class="form-control" placeholder="Иванов Иван Иванович" @bind-Value="user.ClientName"/>
              <ValidationMessage For="(() => user.ClientName)" />
            </div>
            <p> test: @user.ClientName</p>

            <div class="col-6">
                <label for="phoneNumber" class="form-label">Номер телефона</label>
                <div class="input-group has-validation">
                    <span class="input-group-text">+7</span>
                    <InputText class="form-control" placeholder="9011418686" @bind-Value="user.ClientPhone"/>
                    <ValidationMessage For="(() => user.ClientPhone)" />
                </div>
            </div>

            <div class="col-md-6">
              <label for="email" class="form-label">Адрес электронной почты <span class="text-muted">(По желанию)</span></label>
              <InputText type="email" class="form-control" id="email" placeholder="Ivanov@yandex.ru" @bind-Value="user.ClientMail"/>
            </div>

            @{
                user.OnSelected();
            }
             <div class="col-12">
                <div class="col-12">
                    <InputRadioGroup Name="radio-overview-2" @bind-Value="user.OfDelSell">
                    <div class="boxed-check-group boxed-check-outline-primary">
                        <label class="boxed-check boxed-check-inline">
                            <InputRadio class="boxed-check-input" type="radio" name="radio-overview-2" Value="@User.OfficeOrDelivery.Sam"/>
                            <div class="boxed-check-label">Привезу самостоятельно</div>
                        </label>
                        <label class="boxed-check boxed-check-inline">
                            <InputRadio class="boxed-check-input" type="radio" name="radio-overview-2" Value="@User.OfficeOrDelivery.Vivoz"/>
                            <div class="boxed-check-label">Мне нужен вывоз</div>
                        </label>
                    </div>
                    </InputRadioGroup>
                </div>
            </div>

            <div class="col-12" id="wizard" style="display:none;" @attributes="user.InputAttributes">
              <label for="Address" class="form-label">Адрес</label>
              <InputText type="text" class="form-control" id="Address" placeholder="Город, улица, дом, подъезд" @bind-Value="user.ClientAdress"/>
            </div>

            <div class="col-12">
                <div class="col-6">
                <label for="Delivery" class="form-label">Введите ШК коробок по очереди</label>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1">WB</span>
                    <input type="number" class="form-control" name="barcode" placeholder="8027 4257" aria-label="" aria-describedby="button-addon2"
                            @bind-value="barcode" @bind-value:event="oninput" @onkeydown="@Enter">
                    <button class="btn btn-outline-primary" type="button" id="button-addon2" @onclick="AddToList">Добавить</button>
                </div>
                </div>
            </div>

            @foreach(string bar in AllNumbersBarcode)
            {
                <div class="col-6">
                    <div class="input-group mb-3">
                        <span class="input-group-text col-9" id="basic-addon1">@bar</span>
                        <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveBarcode(bar)">Удалить</button>
                    </div>
                </div>
            }


          <hr class="my-4">

          <h4 class="mb-3">Оплата</h4>

          <div class="my-3">
            <div class="form-check">
              <input id="credit" name="paymentMethod" type="radio" class="form-check-input" checked="" required="">
              <label class="form-check-label" for="credit">Наличные</label>
            </div>
            <div class="form-check">
              <input id="debit" name="paymentMethod" type="radio" class="form-check-input" required="">
              <label class="form-check-label" for="debit">Карта (+2%)</label>
            </div>
            <div class="form-check"></div>
          </div>

          
            <div class="col-12">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" Value="ok" id="invalidCheck" Checked="@isChecked" 
                  @onchange="SubmitChanged" required>
                  <label class="form-check-label" for="invalidCheck">
                    Примите условия и соглашения
                  </label>
                  <div class="invalid-feedback">
                    Вы должны принять перед отправкой.
                  </div>
                </div>
            </div>

          <hr class="my-4">
          </div>
          <button class="w-100 btn btn-secondary btn-lg" type="button" @attributes="InputAttributesSubmit">Создать заявку</button>
        </form>
      </div>
    </div>
  </main>

  <footer class="my-5 pt-5 text-muted text-center text-small">
    <p class="mb-1">© 2021–2022 Доставка на маркет</p>
  </footer>
</div>
</EditForm>
</body>

@code{
    //private string value = "Дата не выбрана";


    User user = new User();
    void Create()
    {
        Console.WriteLine(user.ClientPhone);
    }
    

    //private string values = "Sam";
    

    // Количество коробок в поставке
    private int item {get; set;}

    private List<string> AllNumbersBarcode = new List<string>();
    private string barcode { get; set; } = "";

    private bool isChecked;
    public Dictionary<string, object> InputAttributesSubmit { get; set; }

    //public void CitySelect(Microsoft.AspNetCore.Components.ChangeEventArgs args) => user.CitySell = (string)args.Value;

    // Дата отправки
    //public void OnSelect(Microsoft.AspNetCore.Components.ChangeEventArgs args) => user.Value = (string)args.Value;

    //public int Converting(string phone)
    //{
    //    phone = clientPhone;
    //    int result = Convert.ToInt32(phone);
    //    return result;
    //}

    // Нужен ли вывоз или привезет сам
    

    public void AddToList()
    {
        AllNumbersBarcode.Add(barcode);
        barcode = "";
    }

    public void RemoveBarcode(string bar)
    {
        AllNumbersBarcode.Remove(bar);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            AddToList();
        }
    }

    public void SubmitChanged(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        isChecked = (bool)args.Value;
        if (isChecked)
        {
            InputAttributesSubmit = new Dictionary<string, object>()
            {
                { "class", "w-100 btn btn-success btn-lg" },
                { "type", "submit" }
            };
        }
        else if(isChecked == false)
        {
            InputAttributesSubmit = new Dictionary<string, object>()
            {
                { "class", "w-100 btn btn-secondary btn-lg" },
                { "type", "button" }
            };
        }
    }


}